apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: rootProject.file("app/codeQuality.gradle")

android {
    compileSdkVersion 26
    buildToolsVersion versions.buildTools
    defaultConfig {
        applicationId "com.wabadaba.dziennik"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 5
        versionName "0.4"
        flavorDimensions "versionCode"
        testInstrumentationRunner 'com.github.tmurakami.dexopener.DexOpenerAndroidJUnitRunner'
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    productFlavors {
        dev {
            buildConfigField "String", "HOST", "\"librus-mock.herokuapp.com\""
            buildConfigField "String", "SENDER_ID", "\"745699180250\""
        }
        full {
            buildConfigField "String", "HOST", "\"api.librus.pl\""
            buildConfigField "String", "SENDER_ID", "\"431120868545\""
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
    lintOptions {
        disable 'InvalidPackage'
    }
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation group: 'org.slf4j', name: 'slf4j-android', version: versions.slf4j_android
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$versions.kotlin"

    // Support library
    implementation "com.android.support:multidex:$versions.androidMultidex"
    implementation "com.android.support:appcompat-v7:$versions.supportLibrary"
    implementation "com.android.support:support-v13:$versions.supportLibrary"
    implementation "com.android.support:support-v4:$versions.supportLibrary"
    implementation "com.android.support:preference-v14:$versions.supportLibrary"
    implementation "com.android.support:design:$versions.supportLibrary"
    implementation "com.android.support.constraint:constraint-layout:$versions.constraintLayout"

    // Play services
    implementation "com.google.android.gms:play-services-gcm:$versions.play_services"

    // Crash reporting
    implementation "com.bugsnag:bugsnag-android:$versions.bugsnag"

    implementation "io.github.microutils:kotlin-logging:$versions.kotlin_logging"

    // Time utils
    implementation "joda-time:joda-time:$versions.joda_time"
    implementation "com.github.debop:koda-time:$versions.koda_time"

    // Jackson
    implementation "com.fasterxml.jackson.core:jackson-databind:$versions.jackson"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$versions.jackson"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-joda:$versions.jackson"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$versions.rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
    implementation "io.reactivex.rxjava2:rxkotlin:$versions.rxkotlin"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$versions.okHttp"

    // Requery
    implementation "io.requery:requery:$versions.requery"
    implementation "io.requery:requery-android:$versions.requery"
    implementation "io.requery:requery-kotlin:$versions.requery"
    implementation "io.requery:requery-jackson:$versions.requery"
    kapt "io.requery:requery-processor:$versions.requery"

    // Dagger
    implementation "com.google.dagger:dagger:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    kaptTest "com.google.dagger:dagger-compiler:$versions.dagger"

    // Android architecture components
    implementation "android.arch.lifecycle:runtime:$versions.aac_runtime"
    implementation "android.arch.lifecycle:extensions:$versions.aac_compiler"
    kapt "android.arch.lifecycle:compiler:$versions.aac_compiler"

    implementation "com.afollestad.material-dialogs:core:$versions.material_dialogs"
    implementation "com.amulyakhare:com.amulyakhare.textdrawable:$versions.textdrawable"
    implementation "co.zsmb:materialdrawer-kt:$versions.material_drawer"
    implementation "eu.davidea:flexible-adapter:$versions.flexible_adapter"
    implementation "eu.davidea:flexible-adapter-databinding:$versions.adapter_databind"

    // Test
    testImplementation "junit:junit:$versions.junit"
    testImplementation "com.nhaarman:mockito-kotlin:$versions.mockito_kotlin"
    testImplementation "org.amshove.kluent:kluent:$versions.kluent"
    testImplementation "org.bouncycastle:bcprov-jdk15on:$versions.bcprov_jdk15on"
    testImplementation("org.robolectric:robolectric:$versions.roboelectric", {
        exclude group: 'org.bouncycastle'
    })

    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okHttp"

    // Android Test
    androidTestImplementation("org.amshove.kluent:kluent:$versions.kluent", {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
    })
    androidTestImplementation "com.github.fabioCollini:DaggerMock:$versions.daggerMock"
    androidTestImplementation "com.github.tmurakami:dexopener:$versions.dexopener"
    androidTestImplementation "org.mockito:mockito-android:$versions.mockito_android"
    androidTestImplementation "com.nhaarman:mockito-kotlin:$versions.mockito_kotlin"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$versions.espresso_intents"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$versions.espresso_core", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation "com.android.support.test:runner:$versions.supportTest"
    androidTestImplementation "com.android.support.test:rules:$versions.supportTest"

}
